/**
Taylor Ewertz
Carroll
CS570
**/


#include <stdio.h>
#include "getword.h"

int getword( char *w){

	int iochar;
	int wordcount = 0;
	int dsign = 0;	
	
	iochar = getchar();

	//ignores white space before first character.

	while(iochar == ' ')
		iochar = getchar();

	//when getchar hits a $ in the front of the word i call getchar again to skip to the next character in the arrary and place a null there.
	//also increases a dsign flag to one so the program will be able to change to negative wordlengths

	if(iochar == '$'){
		dsign = 1;
		iochar = getchar();
		*w = '\0';
	}

	// when getchar encounters a newline it places a null chaacter and returns a wordlength of 0

	if(iochar == '\n'){
		*w = '\0';
		return 0;
	}

	//when getchar gets an EOF it places a null in the pointer of w and returns a word length of -255

	if(iochar == EOF){
		*w = '\0';
		return -255;
	}

	//when getchar gets a ; if the first character in a word and returns a length of 0
		
	if(iochar == ';'){
		*w = '\0';
		w++;
		*w = '\0';
		return 0;
	}

	// this handles special characters within strings of characters. for spaces and EOF i made it so if the dollar sign flag is seen the wordlength will be negative.
	// also for newline and ; i ungetc to put those characters back into the array then place a null character and then return the word length..


	while(iochar != EOF){
	
		if(iochar == ' ' || iochar == EOF){
			if(dsign == 0){
				*w = '\0';
				return wordcount;
			}
			else{
				*w = '\0';
				return -wordcount;
			}
		}
		if(iochar == '\n'){
			iochar = ungetc(iochar,stdin);
			*w ='\0';
			return -wordcount;
		}
		if(iochar == ';'){
			iochar = ungetc(iochar,stdin);
			*w = '\0';
			return wordcount;
		}
		*w = iochar;
		w++;
		wordcount++;
		iochar = getchar();
		*w = '\0';
	}
	return -wordcount;
}
